<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbPesquisaCadastro.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABYAAAAWCAYAAADEtGw7AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAAATdEVYdFNvZnR3YXJlAFBob3RvU2NhcGWAdZG/AAAC+klE
        QVRIS72VTWjUQBTHoyh4UCwVD0Vhpc0mk+ym35vMpLubVfFiKwrWg4qIehJBRNSL6F48iO0mk+yHtlv7
        YauIUi8iFC8eFA8WvAiCt4qgHiwV7aVWjG/SsR7SbWsL/i7L/t/bN/9582ZW+K+glF2jGvQE0t1+2XAe
        yZjeV8ziZZRwCE/5d6DQWRl7nzTrjq+lh/xY8rYfTw349Zm7vmre9JFZeCCaN+p4+vJA2KGsCCuGDHdM
        Js5JWCgj6e4xcN2LsDfFFkCk8F5sdZv4zxZH0e0LcXCISHEmZuYPouZrNYpZOK1geoqnCGLSVRF2n2nW
        iC9j923Ecqp4aGHA1Q5w8y2W7PNlYndKpBspZukj+876zNMCaluub4bc16w47PAqlxcGtn1+zgUdVXG5
        GpmlSejlK0S64oLgr+Fp84jY3heYMOiEqhY2cjkMOH4cTw/4KEE7JMO+osAhRRty23g4RMTKbpAMZ4Ll
        qQmnkcthoF+v1LbeIAkZ1IOFBnmoIpLuPGWu4WD3cykMtOAlS1KIk+bSksDiL2LJsh816F4uhYFeDWnp
        YV/C9BKXFgUl8ltkw51ExP0VTdq1XA4jE7cznh5kI/RONvs2cbkiCnYuatYwm4rnQja7lsthItYAO4w3
        WmbEVwynDFJoEv4g6fYuhIvf2UVSdO8Alysj67md8B78YM5hTh/KOK/xUECkwamSsHMO9OlgNA2ngJrt
        GoV0LX0uqp47BBfjS33mHlxpb1aGrSoGLUOLRqHQB3Yzg7HEXsmysuvgcwzMzCCjew8vURl2KRSSH4Ef
        TbNJYQ9RPNXvw4IwNcVxhOlx0XTrIP4kGNG2W6AXvi6rOEPT3e2IeO1It8/I2D6qkFJTS0vPehZDxG5X
        23rgtSuBe8qLF6eWXXwxgsXgTOaLm3POFUJ385SVIyfoEXA6+9d5DxvZzyLslqesnLk2FX6yPwE4m6At
        Ud1L8fDqQLpzGB7/meA9N+i4inPVPLR6xNbupliyt0NsdLcKgiD8BhCvNPKuQi/6AAAAAElFTkSuQmCC
</value>
  </data>
</root>